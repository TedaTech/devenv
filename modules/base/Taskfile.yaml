version: '3'

vars:
  KUBERNETES_VERSION: '{{.KUBERNETES_VERSION | default "v1.31.1"}}'
  CILIUM_VERSION: '{{.CILIUM_VERSION | default "1.16.3"}}'

tasks:
  create:
    desc: Create cluster and configure, root-ca secret and install crossplane
    cmds:
      - task: cluster-create
      - task: install-cilium
      - task: install-local-cert
      - task: install-infra

  destroy:
    desc: Destroy the entire cluster, ensure a clean environment
    cmds:
      - kind delete cluster --name {{.CLUSTER_NAME}}
      # Ensures that on a new cluster all template files are applied
      - rm -Rf .task

  cluster-create:
    internal: true
    status:
      - kind get clusters | grep {{.CLUSTER_NAME}}
    cmds:
      - task: cluster-create-image-cache
      - |
        kind get clusters | grep {{.CLUSTER_NAME}} || kind create cluster \
          --name {{.CLUSTER_NAME}} \
          --image kindest/node:{{.KUBERNETES_VERSION}} \
          --config=$TEDA_KIND_CONFIG
  cluster-create-image-cache:
    internal: true
    status:
      - docker volume inspect kind-containerd-data
    cmds:
      - docker volume create kind-containerd-data

  install-cilium:
    internal: true
    status:
      - cilium status
    cmds:
      - cilium status || cilium install --version {{.CILIUM_VERSION}}

  install-local-cert:
    internal: true
    status:
      - kubectl get secret --namespace cert-manager root-ca
    cmds:
      - mkcert -install
      - kubectl create namespace cert-manager || true
      - |
        kubectl create secret tls root-ca --namespace cert-manager \
          --key "$(mkcert -CAROOT)/rootCA-key.pem" \
          --cert "$(mkcert -CAROOT)/rootCA.pem" \
          --dry-run=client -o yaml \
          | kubectl apply -f -

  install-infra:
    desc: Setup infra components, as referenced from infra repository
    internal: true
    status:
      - kubectl wait --for=condition=Ready helmrelease/crossplane -n crossplane --timeout=0s
    vars:
      ENVIRONMENT: '{{.ENVIRONMENT | default "staging"}}'
      PATH_QUERY: '{{.PATH_QUERY | default "?ref=main"}}'
      INFRA_REPOSITORY: '{{.INFRA_REPOSITORY | default "git@github.com:TedaTech/infra//"}}'
    cmds:
      - kubectl apply -k {{.INFRA_REPOSITORY}}clusters/{{.ENVIRONMENT}}/flux-system{{.PATH_QUERY}}
      - kubectl apply -k {{.INFRA_REPOSITORY}}infrastructure/controllers{{.PATH_QUERY}}
      - kubectl wait --for=condition=Ready helmrelease/crossplane -n crossplane --timeout=300s
      - kubectl apply -k {{.INFRA_REPOSITORY}}infrastructure/configs{{.PATH_QUERY}}
